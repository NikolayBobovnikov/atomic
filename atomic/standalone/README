Файл настройки должен содержать информацию:
• тип входных данных (минимально необходимо реализовать типы "int", "float");
• последовательность обработок (минимально необходимо реализовать обработки
"умножение на число", "логарифм по основанию", "возведение в степень",
"усреднение по 10 предыдущим отсчётам");
• тип выходных данных (минимально необходимо реализовать типы "int", "float");


Вопросы с вариантами разрешения, по задаче 1:
    1. Все вычислительные задачи конвейера параметризуются одним параметром?
      - есть комплексные задачи с набором в т.ч. нечисловых параметров

    2. Инпут однородный? Т.е. тип вродных данных - общий для всех данных?
      - исходим из однородного инпута

    3. Типы входных и выходных данных - одинаковые для всех задач в конвейере?
      - исходим из возможности разных типов у разных задач, 
      так чтобы вх/вых типы всего конвейера соответсвовали общему требованию.
      Пример:
        input: float
        output: int

        task1 : float -> double
        task2 : double -> int
        pipeline: float -> task 1 -> task2 -> int

    4. Что делать при ошибке в данных или при процессинге?
      - пишем в output соответственно "incorrect input"/"processing error" 
      в качестве результата для данной входной строки,
      и продолжаем обработку входных данных


NOTES:
  1. Processing of i-th and j-th data items is independent, can and should be parallelized
  2. Plugin system for task management
  3.  
    

PLAN:
  1. Parse CLI arguments
  2. Reade configuration file with settings
  3. Build tasks and compose pipeline
      3.1 Validation of the task parameters
      3.2 Validation of the pipeline. 
          Each task may operate on different types of input data, and produce output data of another type.
          task1 : float -> double
          task2 : double -> int
          pipeline: float -> task 1 -> task2 -> int
  4. Process intput file
      4.1 Strategy: line by line
      4.2 If line is incorrect, log error to the output 
    



 # Pipeline configuration for processing input data
 # Types of input and output data:
 # - global, for the pipeline
 # - local, for the task (optional)
---
- input type: "float"
- output type: "int"
- pipeline:
    - task:
        name: "multiply"
        input type: "int"
        output type: "int"
        args:
          - arg:
              type: "int"
              value: 2
    - task:
        name: "add"
        input type: "int"
        output type: "float"
        args:
          - arg:
              type: "float"
              value: 0.5
    - task:
        name: "complex task"
        input type: "float"
        output type: "int"
        kwargs:
          - kwarg:
              name: "strategy"
              type: "string"
              value: "interpolation"
